gcc -std=c99 -c DynamicPointerArray.c StaticArray.c
gcc -std=c99 -fPIC -c -o DynamicPointerArray2.o DynamicPointerArray.c
gcc -std=c99 -fPIC -c -o StaticArray2.o StaticArray.c
ar -cr libstatarray.a DynamicPointerArray.o StaticArray.o
gcc -std=c99 -c -o static_main.o static_main.c -O1
gcc -std=c99 static_main.o libstatarray.a -o static_main -O1
#rm -f raport.txt

Static allocation of array with size= 1000 and block_size=800
System: 0.000000 s
User: 0.024000 s
Real: 0.083155 s

Dynamic allocation of array with size= 1000 and block_size=800
System: 0.000000 s
User: 0.016000 s
Real: 0.018903 s

Static search with size= 2000, block_size=800 items = 100
System: 0.000000 s
User: 0.456000 s
Real: 0.456722 s

Dynamic search with size= 2000, block_size=800 items = 100
System: 0.000000 s
User: 2.732000 s
Real: 2.730803 s

Static allocation and rm of block with size= 2000, block_size=800 items = 100
System: 0.000000 s
User: 0.004000 s
Real: 0.003455 s

Dynamic allocation and rm element with size= 2000, block_size=800 items = 100
System: 0.000000 s
User: 0.004000 s
Real: 0.001873 s

Dynamic allocation and rm element with size= 2000, block_size=800 items = 100
System: 0.000000 s
User: 0.004000 s
Real: 0.002188 s

Static allocation and rm element with size= 2000, block_size=800 items = 100
System: 0.000000 s
User: 0.004000 s
Real: 0.003626 s
rm -f *o *.so *.a *.out
rm -f main
rm -f static_main
\n Shared run: \n
gcc -std=c99 -c DynamicPointerArray.c StaticArray.c
gcc -std=c99 -fPIC -c -o DynamicPointerArray2.o DynamicPointerArray.c
gcc -std=c99 -fPIC -c -o StaticArray2.o StaticArray.c
gcc -std=c99 -shared -o libdynarray.so DynamicPointerArray2.o StaticArray2.o
export LD_LIBRARY_PATH=D_LIBRARY_PATH:`pwd`
gcc -std=c99 -o main static_main.c -L. libdynarray.so -O1

Static allocation of array with size= 1000 and block_size=800
System: 0.000000 s
User: 0.024000 s
Real: 0.082849 s

Dynamic allocation of array with size= 1000 and block_size=800
System: 0.000000 s
User: 0.016000 s
Real: 0.018790 s

Static search with size= 2000, block_size=800 items = 100
System: 0.000000 s
User: 0.456000 s
Real: 0.456977 s

Dynamic search with size= 2000, block_size=800 items = 100
System: 0.000000 s
User: 2.712000 s
Real: 2.719633 s

Static allocation and rm of block with size= 2000, block_size=800 items = 100
System: 0.000000 s
User: 0.000000 s
Real: 0.003433 s

Dynamic allocation and rm element with size= 2000, block_size=800 items = 100
System: 0.000000 s
User: 0.004000 s
Real: 0.001896 s

Dynamic allocation and rm element with size= 2000, block_size=800 items = 100
System: 0.000000 s
User: 0.004000 s
Real: 0.002166 s

Static allocation and rm element with size= 2000, block_size=800 items = 100
System: 0.000000 s
User: 0.004000 s
Real: 0.003680 s
rm -f *o *.so *.a *.out
rm -f main
rm -f static_main
\n Dynamic run: \n
gcc -std=c99 -c DynamicPointerArray.c StaticArray.c
gcc -std=c99 -fPIC -c -o DynamicPointerArray2.o DynamicPointerArray.c
gcc -std=c99 -fPIC -c -o StaticArray2.o StaticArray.c
gcc -std=c99 -shared -o libdynarray.so DynamicPointerArray2.o StaticArray2.o
export LD_LIBRARY_PATH=D_LIBRARY_PATH:`pwd`
gcc -std=c99 -L. -o main main.c libdynarray.so -ldl -O1

Static allocation of array with size= 1000 and block_size=800
System: 0.000000 s
User: 0.036000 s
Real: 0.086047 s

Dynamic allocation of array with size= 1000 and block_size=800
System: 0.000000 s
User: 0.020000 s
Real: 0.019902 s

Static search with size= 2000, block_size=800 items = 100
System: 0.000000 s
User: 0.460000 s
Real: 0.460757 s

Dynamic search with size= 2000, block_size=800 items = 100
System: 0.000000 s
User: 2.736000 s
Real: 2.735907 s

Dynamic allocation and rm element with size= 2000, block_size=800 items = 100
System: 0.000000 s
User: 0.000000 s
Real: 0.001845 s

Static allocation and rm element with size= 2000, block_size=800 items = 100
System: 0.000000 s
User: 0.004000 s
Real: 0.003705 s

Dynamic allocation and rm element with size= 2000, block_size=800 items = 100
System: 0.000000 s
User: 0.004000 s
Real: 0.002218 s

Static allocation and rm element with size= 2000, block_size=800 items = 100
System: 0.000000 s
User: 0.000000 s
Real: 0.003663 s
rm -f *o *.so *.a *.out
rm -f main
rm -f static_main
