gcc -std=c99 -c DynamicPointerArray.c StaticArray.c
gcc -std=c99 -fPIC -c -o DynamicPointerArray2.o DynamicPointerArray.c
gcc -std=c99 -fPIC -c -o StaticArray2.o StaticArray.c
ar -cr libstatarray.a DynamicPointerArray.o StaticArray.o
gcc -std=c99 -c -o static_main.o static_main.c -O3
gcc -std=c99 static_main.o libstatarray.a -o static_main -O3
#rm -f raport.txt

Static allocation of array with size= 1000 and block_size=800
System: 0.000000 s
User: 0.016000 s
Real: 0.082585 s

Dynamic allocation of array with size= 1000 and block_size=800
System: 0.000000 s
User: 0.020000 s
Real: 0.019957 s

Static search with size= 2000, block_size=800 items = 100
System: 0.000000 s
User: 0.452000 s
Real: 0.455243 s

Dynamic search with size= 2000, block_size=800 items = 100
System: 0.000000 s
User: 2.732000 s
Real: 2.730330 s

Static allocation and rm of block with size= 2000, block_size=800 items = 100
System: 0.000000 s
User: 0.004000 s
Real: 0.003391 s

Dynamic allocation and rm element with size= 2000, block_size=800 items = 100
System: 0.000000 s
User: 0.004000 s
Real: 0.001891 s

Dynamic allocation and rm element with size= 2000, block_size=800 items = 100
System: 0.000000 s
User: 0.004000 s
Real: 0.002228 s

Static allocation and rm element with size= 2000, block_size=800 items = 100
System: 0.000000 s
User: 0.004000 s
Real: 0.003718 s
rm -f *o *.so *.a *.out
rm -f main
rm -f static_main
\n Shared run: \n
gcc -std=c99 -c DynamicPointerArray.c StaticArray.c
gcc -std=c99 -fPIC -c -o DynamicPointerArray2.o DynamicPointerArray.c
gcc -std=c99 -fPIC -c -o StaticArray2.o StaticArray.c
gcc -std=c99 -shared -o libdynarray.so DynamicPointerArray2.o StaticArray2.o
export LD_LIBRARY_PATH=D_LIBRARY_PATH:`pwd`
gcc -std=c99 -o main static_main.c -L. libdynarray.so -O3

Static allocation of array with size= 1000 and block_size=800
System: 0.000000 s
User: 0.028000 s
Real: 0.082213 s

Dynamic allocation of array with size= 1000 and block_size=800
System: 0.000000 s
User: 0.016000 s
Real: 0.019068 s

Static search with size= 2000, block_size=800 items = 100
System: 0.000000 s
User: 0.460000 s
Real: 0.460885 s

Dynamic search with size= 2000, block_size=800 items = 100
System: 0.000000 s
User: 2.708000 s
Real: 2.713465 s

Static allocation and rm of block with size= 2000, block_size=800 items = 100
System: 0.000000 s
User: 0.000000 s
Real: 0.003413 s

Dynamic allocation and rm element with size= 2000, block_size=800 items = 100
System: 0.000000 s
User: 0.004000 s
Real: 0.001936 s

Dynamic allocation and rm element with size= 2000, block_size=800 items = 100
System: 0.000000 s
User: 0.004000 s
Real: 0.002169 s

Static allocation and rm element with size= 2000, block_size=800 items = 100
System: 0.000000 s
User: 0.004000 s
Real: 0.004098 s
rm -f *o *.so *.a *.out
rm -f main
rm -f static_main
\n Dynamic run: \n
gcc -std=c99 -c DynamicPointerArray.c StaticArray.c
gcc -std=c99 -fPIC -c -o DynamicPointerArray2.o DynamicPointerArray.c
gcc -std=c99 -fPIC -c -o StaticArray2.o StaticArray.c
gcc -std=c99 -shared -o libdynarray.so DynamicPointerArray2.o StaticArray2.o
export LD_LIBRARY_PATH=D_LIBRARY_PATH:`pwd`
gcc -std=c99 -L. -o main main.c libdynarray.so -ldl -O3

Static allocation of array with size= 1000 and block_size=800
System: 0.000000 s
User: 0.020000 s
Real: 0.084899 s

Dynamic allocation of array with size= 1000 and block_size=800
System: 0.000000 s
User: 0.024000 s
Real: 0.024054 s

Static search with size= 2000, block_size=800 items = 100
System: 0.000000 s
User: 0.460000 s
Real: 0.461685 s

Dynamic search with size= 2000, block_size=800 items = 100
System: 0.000000 s
User: 2.748000 s
Real: 2.747529 s

Dynamic allocation and rm element with size= 2000, block_size=800 items = 100
System: 0.000000 s
User: 0.004000 s
Real: 0.001858 s

Static allocation and rm element with size= 2000, block_size=800 items = 100
System: 0.000000 s
User: 0.004000 s
Real: 0.004070 s

Dynamic allocation and rm element with size= 2000, block_size=800 items = 100
System: 0.000000 s
User: 0.004000 s
Real: 0.002149 s

Static allocation and rm element with size= 2000, block_size=800 items = 100
System: 0.000000 s
User: 0.004000 s
Real: 0.003659 s
rm -f *o *.so *.a *.out
rm -f main
rm -f static_main
