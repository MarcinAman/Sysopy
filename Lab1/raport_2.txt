gcc -std=c99 -c DynamicPointerArray.c StaticArray.c
gcc -std=c99 -fPIC -c -o DynamicPointerArray2.o DynamicPointerArray.c
gcc -std=c99 -fPIC -c -o StaticArray2.o StaticArray.c
ar -cr libstatarray.a DynamicPointerArray.o StaticArray.o
gcc -std=c99 -c -o static_main.o static_main.c -O2
gcc -std=c99 static_main.o libstatarray.a -o static_main -O2
#rm -f raport.txt

Static allocation of array with size= 1000 and block_size=800
System: 0.000000 s
User: 0.020000 s
Real: 0.082652 s

Dynamic allocation of array with size= 1000 and block_size=800
System: 0.000000 s
User: 0.020000 s
Real: 0.019712 s

Static search with size= 2000, block_size=800 items = 100
System: 0.000000 s
User: 0.456000 s
Real: 0.457101 s

Dynamic search with size= 2000, block_size=800 items = 100
System: 0.000000 s
User: 2.704000 s
Real: 2.703075 s

Static allocation and rm of block with size= 2000, block_size=800 items = 100
System: 0.000000 s
User: 0.004000 s
Real: 0.003397 s

Dynamic allocation and rm element with size= 2000, block_size=800 items = 100
System: 0.000000 s
User: 0.004000 s
Real: 0.001968 s

Dynamic allocation and rm element with size= 2000, block_size=800 items = 100
System: 0.000000 s
User: 0.004000 s
Real: 0.002244 s

Static allocation and rm element with size= 2000, block_size=800 items = 100
System: 0.000000 s
User: 0.000000 s
Real: 0.003642 s
rm -f *o *.so *.a *.out
rm -f main
rm -f static_main
\n Shared run: \n
gcc -std=c99 -c DynamicPointerArray.c StaticArray.c
gcc -std=c99 -fPIC -c -o DynamicPointerArray2.o DynamicPointerArray.c
gcc -std=c99 -fPIC -c -o StaticArray2.o StaticArray.c
gcc -std=c99 -shared -o libdynarray.so DynamicPointerArray2.o StaticArray2.o
export LD_LIBRARY_PATH=D_LIBRARY_PATH:`pwd`
gcc -std=c99 -o main static_main.c -L. libdynarray.so -O2

Static allocation of array with size= 1000 and block_size=800
System: 0.000000 s
User: 0.024000 s
Real: 0.081600 s

Dynamic allocation of array with size= 1000 and block_size=800
System: 0.000000 s
User: 0.016000 s
Real: 0.018860 s

Static search with size= 2000, block_size=800 items = 100
System: 0.000000 s
User: 0.460000 s
Real: 0.457623 s

Dynamic search with size= 2000, block_size=800 items = 100
System: 0.000000 s
User: 2.732000 s
Real: 2.728872 s

Static allocation and rm of block with size= 2000, block_size=800 items = 100
System: 0.000000 s
User: 0.000000 s
Real: 0.003425 s

Dynamic allocation and rm element with size= 2000, block_size=800 items = 100
System: 0.000000 s
User: 0.004000 s
Real: 0.001868 s

Dynamic allocation and rm element with size= 2000, block_size=800 items = 100
System: 0.000000 s
User: 0.004000 s
Real: 0.002183 s

Static allocation and rm element with size= 2000, block_size=800 items = 100
System: 0.000000 s
User: 0.000000 s
Real: 0.003680 s
rm -f *o *.so *.a *.out
rm -f main
rm -f static_main
\n Dynamic run: \n
gcc -std=c99 -c DynamicPointerArray.c StaticArray.c
gcc -std=c99 -fPIC -c -o DynamicPointerArray2.o DynamicPointerArray.c
gcc -std=c99 -fPIC -c -o StaticArray2.o StaticArray.c
gcc -std=c99 -shared -o libdynarray.so DynamicPointerArray2.o StaticArray2.o
export LD_LIBRARY_PATH=D_LIBRARY_PATH:`pwd`
gcc -std=c99 -L. -o main main.c libdynarray.so -ldl -O2

Static allocation of array with size= 1000 and block_size=800
System: 0.000000 s
User: 0.024000 s
Real: 0.084124 s

Dynamic allocation of array with size= 1000 and block_size=800
System: 0.000000 s
User: 0.016000 s
Real: 0.018879 s

Static search with size= 2000, block_size=800 items = 100
System: 0.000000 s
User: 0.456000 s
Real: 0.457010 s

Dynamic search with size= 2000, block_size=800 items = 100
System: 0.000000 s
User: 2.752000 s
Real: 2.754655 s

Dynamic allocation and rm element with size= 2000, block_size=800 items = 100
System: 0.000000 s
User: 0.004000 s
Real: 0.001892 s

Static allocation and rm element with size= 2000, block_size=800 items = 100
System: 0.000000 s
User: 0.004000 s
Real: 0.003644 s

Dynamic allocation and rm element with size= 2000, block_size=800 items = 100
System: 0.000000 s
User: 0.004000 s
Real: 0.002159 s

Static allocation and rm element with size= 2000, block_size=800 items = 100
System: 0.000000 s
User: 0.004000 s
Real: 0.003794 s
rm -f *o *.so *.a *.out
rm -f main
rm -f static_main
