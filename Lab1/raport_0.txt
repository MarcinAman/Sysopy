gcc -std=c99 -c DynamicPointerArray.c StaticArray.c
gcc -std=c99 -fPIC -c -o DynamicPointerArray2.o DynamicPointerArray.c
gcc -std=c99 -fPIC -c -o StaticArray2.o StaticArray.c
ar -cr libstatarray.a DynamicPointerArray.o StaticArray.o
gcc -std=c99 -c -o static_main.o static_main.c -O0
gcc -std=c99 static_main.o libstatarray.a -o static_main -O0
#rm -f raport.txt

Static allocation of array with size= 1000 and block_size=800
System: 0.000000 s
User: 0.024000 s
Real: 0.086434 s

Dynamic allocation of array with size= 1000 and block_size=800
System: 0.000000 s
User: 0.016000 s
Real: 0.018823 s

Static search with size= 2000, block_size=800 items = 100
System: 0.000000 s
User: 0.456000 s
Real: 0.457760 s

Dynamic search with size= 2000, block_size=800 items = 100
System: 0.000000 s
User: 2.752000 s
Real: 2.751178 s

Static allocation and rm of block with size= 2000, block_size=800 items = 100
System: 0.000000 s
User: 0.000000 s
Real: 0.003411 s

Dynamic allocation and rm element with size= 2000, block_size=800 items = 100
System: 0.000000 s
User: 0.004000 s
Real: 0.001847 s

Dynamic allocation and rm element with size= 2000, block_size=800 items = 100
System: 0.000000 s
User: 0.004000 s
Real: 0.002146 s

Static allocation and rm element with size= 2000, block_size=800 items = 100
System: 0.000000 s
User: 0.000000 s
Real: 0.003694 s
rm -f *o *.so *.a *.out
rm -f main
rm -f static_main
\n Shared run: \n
gcc -std=c99 -c DynamicPointerArray.c StaticArray.c
gcc -std=c99 -fPIC -c -o DynamicPointerArray2.o DynamicPointerArray.c
gcc -std=c99 -fPIC -c -o StaticArray2.o StaticArray.c
gcc -std=c99 -shared -o libdynarray.so DynamicPointerArray2.o StaticArray2.o
export LD_LIBRARY_PATH=D_LIBRARY_PATH:`pwd`
gcc -std=c99 -o main static_main.c -L. libdynarray.so -O0

Static allocation of array with size= 1000 and block_size=800
System: 0.000000 s
User: 0.028000 s
Real: 0.083021 s

Dynamic allocation of array with size= 1000 and block_size=800
System: 0.000000 s
User: 0.016000 s
Real: 0.018897 s

Static search with size= 2000, block_size=800 items = 100
System: 0.000000 s
User: 0.456000 s
Real: 0.459852 s

Dynamic search with size= 2000, block_size=800 items = 100
System: 0.000000 s
User: 2.708000 s
Real: 2.708502 s

Static allocation and rm of block with size= 2000, block_size=800 items = 100
System: 0.000000 s
User: 0.000000 s
Real: 0.003516 s

Dynamic allocation and rm element with size= 2000, block_size=800 items = 100
System: 0.000000 s
User: 0.004000 s
Real: 0.001867 s

Dynamic allocation and rm element with size= 2000, block_size=800 items = 100
System: 0.000000 s
User: 0.004000 s
Real: 0.002151 s

Static allocation and rm element with size= 2000, block_size=800 items = 100
System: 0.000000 s
User: 0.004000 s
Real: 0.004215 s
rm -f *o *.so *.a *.out
rm -f main
rm -f static_main
\n Dynamic run: \n
gcc -std=c99 -c DynamicPointerArray.c StaticArray.c
gcc -std=c99 -fPIC -c -o DynamicPointerArray2.o DynamicPointerArray.c
gcc -std=c99 -fPIC -c -o StaticArray2.o StaticArray.c
gcc -std=c99 -shared -o libdynarray.so DynamicPointerArray2.o StaticArray2.o
export LD_LIBRARY_PATH=D_LIBRARY_PATH:`pwd`
gcc -std=c99 -L. -o main main.c libdynarray.so -ldl -O0

Static allocation of array with size= 1000 and block_size=800
System: 0.000000 s
User: 0.016000 s
Real: 0.082735 s

Dynamic allocation of array with size= 1000 and block_size=800
System: 0.000000 s
User: 0.016000 s
Real: 0.018848 s

Static search with size= 2000, block_size=800 items = 100
System: 0.000000 s
User: 0.456000 s
Real: 0.458141 s

Dynamic search with size= 2000, block_size=800 items = 100
System: 0.000000 s
User: 2.724000 s
Real: 2.722537 s

Dynamic allocation and rm element with size= 2000, block_size=800 items = 100
System: 0.000000 s
User: 0.004000 s
Real: 0.001892 s

Static allocation and rm element with size= 2000, block_size=800 items = 100
System: 0.000000 s
User: 0.004000 s
Real: 0.003629 s

Dynamic allocation and rm element with size= 2000, block_size=800 items = 100
System: 0.000000 s
User: 0.004000 s
Real: 0.002138 s

Static allocation and rm element with size= 2000, block_size=800 items = 100
System: 0.000000 s
User: 0.004000 s
Real: 0.003636 s
rm -f *o *.so *.a *.out
rm -f main
rm -f static_main
